[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "crop-scanned-photos"
dynamic = ["version"]
description = 'Script that crops scanned photos'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = [
  "photos",
  "photography",
]
authors = [
  { name = " Carlos Barreto", email = "carlobar@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "Pillow",
  "click",
]

[project.urls]
Documentation = "https://github.com/carlobar/crop-scanned-photos#readme"
Issues = "https://github.com/carlobar/crop-scanned-photos/issues"
Source = "https://github.com/carlobar/crop-scanned-photos"

[tool.hatch.version]
path = "crop_scanned_photos/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:crop_scanned_photos tests}"

[tool.coverage.run]
source_pkgs = ["crop_scanned_photos", "tests"]
branch = true
parallel = true
omit = [
  "crop_scanned_photos/__about__.py",
]

[tool.coverage.paths]
crop_scanned_photos = ["crop_scanned_photos", "*/crop_scanned_photos"]
tests = ["tests", "*/crop-scanned-photos/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[project.scripts]
crop-scanned-photos = "crop_scanned_photos.extract:main"